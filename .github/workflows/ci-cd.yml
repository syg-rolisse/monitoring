name: monitoring CI/CD Pipeline

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      
      - name: Install Docker and Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y ca-certificates curl gnupg
          sudo mkdir -p /etc/apt/keyrings
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo tee /etc/apt/keyrings/docker.gpg > /dev/null
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt-get update
          sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin

      - name: Run Docker Compose
        run: |
          pwd
          ls -al
          sudo docker volume ls
          sudo docker compose down || true
          sudo docker compose up --build -d
          sudo docker image prune -f
          sudo docker ps

      - name: Verify Docker Containers
        run: |
          docker ps
          docker compose ps

  copy-on-vps:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout du code
        uses: actions/checkout@v4

      - name: Connexion au VPS et préparation du répertoire
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.VPS_IP }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            rm -rf /opt/monitoring
            mkdir -p /opt/monitoring
            echo "Répertoire /opt/monitoring prêt"

      - name: Copier les fichiers du monitoring sur le VPS
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.VPS_IP }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.PORT }}
          source: "."
          target: /opt/monitoring/
          strip_components: 1

  monitoring-services-deploy:
    needs: copy-on-vps
    runs-on: ubuntu-latest
    steps:
      - name: Connexion au VPS et démarrer les services Docker
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.VPS_IP }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            cd /opt/monitoring
            docker compose up --build -d
            docker image prune -f
            docker ps
            echo "Déploiement terminé avec succès !"
